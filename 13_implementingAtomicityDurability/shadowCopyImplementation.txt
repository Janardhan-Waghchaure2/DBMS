
1. Shadow-copy scheme
    1. it is Based on making copies of DB (aka, shadow copies).
    2. Assumption:- only one Transaction (T) is active at a time.
    3. A pointer called db-pointer is maintained on the disk; 
       which at any instant points to current copy of DB.
    4. T(Transaction), that wants to update DB first creates a complete copy of DB.
    5. All further updates are done on new DB copy leaving the original copy (shadow copy) untouched.
    6. If at any point the T has to be aborted the system deletes the new copy. And the old copy is not affected.
    7. If T success, it is committed as,
        1. OS makes sure all the pages of the new copy of DB written on the disk.
        2. DB system updates the db-pointer to point to the new copy of DB.
        3. New copy is now the current copy of DB.
        4. The old copy is deleted.
        5. The T is said to have been COMMITTED at the point where the updated db-pointer is written to disk.


    8. how  Atomicity is present in this shadow-copy scheme ?
        1. If T fails at any time before db-pointer is updated, the old content of DB are not affected.
        2. T abort(ex:- if user press delete when transaction was going on) 
           can be done by just deleting the new copy of DB.
        3. Hence, either all updates are reflected or none which is what atomicity is.


    9.how  Durability is present in this shadow-copy scheme ?
        1. Suppose, system fails are any time before the updated db-pointer is written to disk.
        2. When the system restarts, it will read db-pointer & will thus, see the original content of DB and none of the effects of T will
            be visible.
        3. T is assumed to be successful only when db-pointer is updated.
        4. If system fails after db-pointer has been updated. Before that all the pages of the new copy were written to disk. Hence,
            when system restarts, it will read new DB copy.



    11. this approch is Inefficient, as entire DB is copied for every Transaction.



